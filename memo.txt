テンプレートマッチング
全種類のモデルを用意
グレスケ二値

実装
server
recognizer
solver:点数計算

recognizer
build.sbt マルチプロジェクト
recognizer/lib/opencv-300.jar

package.scala
ビルド時に必要なリソースを

読み込み時
座標決め打ち

indexsequenceは牌の順番
cropは牌と背景を分離
大きさでソート

隅っことか邪魔
floodfillで白いのを埋める
floodfillはひっかかったら全体

dilate（拡大）で文字部分を大きく
さらに４＊９で牌ごとに輪郭部分だけ取り出す
一番大きい（九筒）に合わせる
tileが4*9
findContoursが輪郭
convexで輪郭の集合をまとめる（凸包）
rectsに4*9の輪郭の集まりが入る
sizeに一番大きい領域が入る
tilesにグレースケールの4*9切り取りを入れる
そして返す
（白黒のはrectsを得るために使用した）





matは手牌、
返り値はシーケンス（一萬は0）
SeqSeqは門前とか

edgeは何角系か
tilesは横やひっくり返った牌
goのIntはシーケンス
locsは座標
rectが認識結果
sortByでlocsに従いソート
i%34は法。ひっくり返したものでもシーケンスを求める
indicsで門前か否か（門前は４牌にならない）






findcountours
輪郭を取る,couroursに結果が入る

approxPolyで多角形をとる

thresholdで二値化

crop:
minArearectでふにゃふにゃ部分を矩形に近似
斜めってる部分を回転させて、矩形を得る